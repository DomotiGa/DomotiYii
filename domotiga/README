Resources (just for reference, its included in this repository)
Yii-1.1.13
wget http://yii.googlecode.com/files/yii-1.1.13.e9e4a0.tar.gz
Yii-Bootstrap 2.1.0.r355
wget http://www.yiiframework.com/extension/bootstrap/files/yii-bootstrap-2.1.0.r355.zip

Install 'DomotiYii':
Unpack/copy both directories to /var/www

Directory called domotiga contains Yii project.
framework is framework directory from Yii 1.1.13 file above.
If you want to use other name for this directory change path in domotiga/index.php

Correct permissions:
The domotiga/assets folder must be writable by the web server (ususally www-data), same for domotiga/protected/models so Gii can generate files there.

Configure DomotiYii via Yii config file:
Config file is protected/config/main.php

Gii is enabled.
Gii is a Web-based tool that you will use to generate Models, Views, and Controllers for the application. 
Change it's password here, also change ipFilter so it contains your local subnet.

    'class'=>'system.gii.GiiModule',
                        'password'=>'Giiha',
                        'ipFilters' => array('127.0.0.1', '192.168.*.*'),

Interface login is hardcoded to admin/admin right now.
Need to decode passwords from domotiga database.

Check DomotiGa database name, location and user/password.

                'db'=>array(
                        'connectionString' => 'mysql:host=localhost;dbname=domotiga',
                        'emulatePrepare' => true,
                        'username' => 'domouser',
                        'password' => 'kung-fu',
                        'charset' => 'utf8',

Check XMLRPC host
Check admin email address

        // application-level parameters that can be accessed
        // using Yii::app()->params['paramName']
        'params'=>array(
                // this is used in contact page
                'adminEmail'=>'support@domotiga.nl',
                'xmlrpcHost'=>'http://localhost:9009',

Change your Apache config:
This is to give .htaccess permission so index.php is removed from urls.
There is a .htaccess file in domotiga directory which does this.

Enable mod rewrite:
$ sudo a2enmod rewrite

Add this section to /etc/apache2/sites-enabled/000-default

        <Directory /var/www/domotiga/>
                AllowOverride All
        </Directory>

Restart
$ sudo service apache2 restart

For lighttpd: (untested)
Use this configuration inside the "$HTTP["host"]" block:

$HTTP["host"] =~ "^(www\.)?example.com$" {
$HTTP["url"] =~ "^/protected/" { url.access-deny = ( "" ) }

url.rewrite-if-not-file = (
  "^/(.*)\.(.*)" => "/$0",
  "^/([^.]+)$" => "/index.php/$1",
  "^/$" => "/index.php"
)

}

Optional Enable/disable logging on web pages:
                             // uncomment the following to show log messages on web pages
                                array(
                                        'class'=>'CWebLogRoute',
                                ),


Optional Enable debugging for development:
vi index.php
// remove the following lines when in production mode
defined('YII_DEBUG') or define('YII_DEBUG',true);
// specify how many levels of call stack should be shown in each log message
defined('YII_TRACE_LEVEL') or define('YII_TRACE_LEVEL',3);

Coding notes:
To add a new 'static/no form' page like site/about:

Edit protected/controllers/SiteController.php
add section like

        public function actionAbout()
        {
                // renders the view file 'protected/views/site/index.php'
                // using the default layout 'protected/views/layouts/main.php'
                $this->render('about');
        }

Create page under protected/views/site/about.php


To add a new settings form:
Login
Enter Gii

Goto Model Generator
fill in database table to generate model for
Table Name:
eg settings_smartvisu
Model Class:
SettingsSmartvisu
Click preview, Click generate
If permission denied

Goto Form Generator
Model Class
SettingsSmartvisu
View Name
settings/smartvisu
Click preview, Click generate
Copy controller class code (without first line <?php...) to controllers/SettingsController.php
Alter code similar to other settings code.


Created devices page:
http://www.slideshare.net/andykelk/a-site-in-15-minutes-with-yii
http://www.larryullman.com/2009/11/07/creating-models-views-and-controllers-in-yii-2/

ToDo Tweaks:
Set login page as default, in config:
'defaultController' => 'login',
Note that this particular line will not work out of the box as only the site controller exists. But you would make this change if you had created a protected/controllers/LoginController.php file (or if any controller file exists for whatever you make be the default). Also note that you add this line so that it.s a top-level array element being returned (i.e., it does not go within any other section; it.s easiest to add it between the .basePath. and .name. elements, for clarity).
