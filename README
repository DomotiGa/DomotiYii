Development info:
----------------
This version of DomotiYii is build with:
Yii-1.1.14 - Framework
from https://github.com/yiisoft/yii/releases/download/1.1.14/yii-1.1.14.f0fee9.tar.gz
Yiistrap-1.1.1 - Twitter Bootstrap for Yii
from https://github.com/Crisu83/yiistrap/archive/1.1.1.zip

Install 'DomotiYii':
-------------------
Unpack domotiga directory to /var/www, or put it's contents in the webroot.
This directory contains the Yii project and the Yii framework.


Yii Framework:
-------------
The framework directory contains the code from the Yii 1.1.14 file above.

If you want to use another name or location for this framework directory change it's path in domotiga/index.php.

The framework directory also contains and handful of patches, you can find them with a fgrep -R 'RDNZL'

These are the changed files:
Correctly map booleans from mysql database tables:
framework/db/schema/mysql/CMysqlColumnSchema.php
framework/db/schema/CDbColumnSchema.php

Generate correct settings forms with bootstrap widgets:
framework/gii/generators/form/templates/default/action.php
framework/gii/generators/form/templates/default/form.php


Correct permissions:
-------------------
The domotiga/assets folder must be writable by the web server (ususally www-data), same for domotiga/protected/models so Gii can generate files there.


Configure DomotiYii:
-------------------
Config file is protected/config/main.php

Gii is enabled.
Gii is a Web-based tool that you will use to generate Models, Views, and Controllers for the application. 
Change it's password here, also change ipFilter so it contains your local subnet.

    'class'=>'system.gii.GiiModule',
                        'password'=>'Giiha',
                        'ipFilters' => array('127.0.0.1', '192.168.*.*'),

Interface login is hardcoded to admin/admin right now.
Need to decode passwords from domotiga database.

Check DomotiGa database name, location and user/password.

                'db'=>array(
                        'connectionString' => 'mysql:host=localhost;dbname=domotiga',
                        'emulatePrepare' => true,
                        'username' => 'domouser',
                        'password' => 'kung-fu',
                        'charset' => 'utf8',

Check XMLRPC host
Check admin email address

        // application-level parameters that can be accessed
        // using Yii::app()->params['paramName']
        'params'=>array(
                // this is used in contact page
                'adminEmail'=>'support@domotiga.nl',
                'xmlrpcHost'=>'http://localhost:9009',


Apache config:
-------------
This is to give .htaccess permission so index.php is removed from urls.
There is a .htaccess file in domotiga directory which does this.

Enable mod rewrite:
$ sudo a2enmod rewrite

Add this section to /etc/apache2/sites-enabled/000-default

        <Directory /var/www/domotiga/>
                AllowOverride All
        </Directory>

Restart
$ sudo service apache2 restart


Lighttpd config: (untested)
---------------
Use this configuration inside the "$HTTP["host"]" block:

$HTTP["host"] =~ "^(www\.)?example.com$" {
$HTTP["url"] =~ "^/protected/" { url.access-deny = ( "" ) }

url.rewrite-if-not-file = (
  "^/(.*)\.(.*)" => "/$0",
  "^/([^.]+)$" => "/index.php/$1",
  "^/$" => "/index.php"
)

}


Logging and debug:
-----------------
Optional Enable/disable logging on web pages:
                             // uncomment the following to show log messages on web pages
                                array(
                                        'class'=>'CWebLogRoute',
                                ),


Optional Enable debugging for development:
vi index.php
// remove the following lines when in production mode
defined('YII_DEBUG') or define('YII_DEBUG',true);
// specify how many levels of call stack should be shown in each log message
defined('YII_TRACE_LEVEL') or define('YII_TRACE_LEVEL',3);


Coding notes:
------------
To add a new 'static/no form' page like site/about:

Edit protected/controllers/SiteController.php
add section like

        public function actionAbout()
        {
                // renders the view file 'protected/views/site/index.php'
                // using the default layout 'protected/views/layouts/main.php'
                $this->render('about');
        }

Create page under protected/views/site/about.php


To add a new settings form:
Login
Enter Gii

Goto Model Generator
fill in database table to generate model for
Table Name:
eg settings_smartvisu
Model Class:
SettingsSmartvisu
Click preview, Click generate
If permission denied

Goto Form Generator
Model Class
SettingsSmartvisu
View Name
settings/smartvisu
Click preview, Click generate
Copy controller class code (without first line <?php...) to controllers/SettingsController.php
Alter code similar to other settings code.
Add page to menu if needed.

